#include<iostream>
#include<queue>
using namespace std;
class Node{
	public:
		int key;
		Node* left;
		Node* right;
	Node(int val)
	{
		 key=val;
		 left=NULL;
		 right=NULL;
	}
};

class binary_tree{
	public:
	Node* root;
	binary_tree()
	{
	root= NULL;	
	}
	void inOrder(Node* &root)
	{
		if(root!=NULL)
		{
			inOrder(root->left);
			cout<<root->key<<endl;
			inOrder(root->right);
			
		}
	}
	void preOrder(Node* &root)
	{
		if(root!=NULL)
		{
			cout<<root->key<<endl;			
			preOrder(root->left);
			preOrder(root->right);
			
		}
	}	
	void postOrder(Node* &root)
	{
		if(root!=NULL)
		{
			postOrder(root->left);
			postOrder(root->right);
			cout<<root->key<<endl;								
		}
	}		

};

int main()
{
	binary_tree bt;
	bt.root= new Node(10);
	bt.root->left=new Node(20);
	bt.root->right=new Node(30);
	bt.root->right->left=new Node(40);
	bt.root->right->right=new Node(50);
	cout<<"Inorder"<<endl;
	bt.inOrder(bt.root);
	cout<<"Preorder"<<endl;
	bt.preOrder(bt.root);
	cout<<"Postorder"<<endl;
	bt.postOrder(bt.root);
	return 0;
	
	
	
}
